/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSubtree(TreeNode s, TreeNode t) {
        if (s == null && t == null) {
            return true;
        }
        if (s == null || t == null) {
            return false;
        }
        boolean ret = false;
        if (s.val == t.val) {
            ret = isSametree(s, t);
        }
        if (!ret) {
            ret = isSubtree(s.left, t);
        }
        if (!ret) {
            ret = isSubtree(s.right, t);
        }
        return ret;
        
    }
    
    public boolean isSametree(TreeNode p, TreeNode q) {
        if (p == null & q == null) {
            return true;
        }
        if (p == null || q == null) {
            return false;
        }
        if (p.val != q.val) {
            return false;
        }
        return isSametree(q.left, p.left)
             && isSametree(q.right, p.right);
    }
}
